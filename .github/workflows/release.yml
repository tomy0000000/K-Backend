name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and Push Image
    runs-on: ubuntu-latest
    steps:
      - name: Read Docker Image Identifiers
        run: echo ::set-env name=IMAGE_REPOSITORY::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')

      - name: Set up Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY }}
            ghcr.io/${{ env.IMAGE_REPOSITORY }}
          tags: |
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      - name: Build and Push Image
        uses: ${{ github.repository }}/build-push-image@main

  # update-docker-readme:
  #   name: Update Docker Hub README
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Update Repository Description
  #       uses: peter-evans/dockerhub-description@v2
  #       with:
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         short-description: ${{ github.event.repository.description }}

  # deployment:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   environment: Production
  #   needs: build
  #   steps:
  #     - name: SSH and execute deployment
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         port: ${{ secrets.PORT }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         script_stop: true
  #         script: |
  #           cd k_backend
  #           docker pull tomy0000000/k_backend:latest
  #           docker-compose up --detach
  #           docker network connect nginx_default k_backend_app
